function sigF = MultiTaperNotchFilter(sig,fCut,Fs,plotFlag)


fCut = 62.5;62:0.5:63;

params.Fs = Fs;

winSize = length(sig);
T = winSize/Fs; % in Seconds
W = 3; % in Hz, this is the W in multitaper language [-W W]
TW = T*W;
[e,v] = dpss(winSize,TW,50);
k = find(v>0.99,1,'last');
if(isempty(k))
    k=1;
end


params.Fs = Fs;
params.tapers = [TW k];
params.pad = 1;

% sigF= rmlinesc(sig, params, 0, plotFlag, fCut);
p =0;
plt = plotFlag;
f0 = fCut;
data = sig;
data = change_row_to_column(data);
% [N,C]=size(data);
[~,~,~,~,~,~,params]=getparams(params);



% [datafit,Amps,freqs,Fval,sig]=fitlinesc(data,params,p,'n',f0);
data = change_row_to_column(data);
[N,C]=size(data);

[tapers,~,Fs,~,~,~,params]=getparams(params); 
params.tapers=dpsschk(tapers,N,Fs); % calculate the tapers
[~,A,f,~] = ftestc(data,params,p,plt);

indx = zeros(size(f0));
for n=1:length(f0)
   [~,indx(n)]=min(abs(f-f0(n)));
end

indx = unique(unique(indx));
fsig=f(indx);
for ch=1:C
   freqs{ch}=fsig;
   Amps{ch}=A(indx,ch);
   Nf=length(fsig);
   fsig = 62.5;
   datafit(:,ch)=exp(i*2*pi*(0:N-1)'*fsig/Fs)*mean(A(indx,ch))+exp(-i*2*pi*(0:N-1)'*fsig/Fs)*conj(mean(A(indx,ch)));
end



sigF = data-datafit;





%% test Codes
% params.tapers = [TW k];
% params.pad = 1;
% params.trialave = 0;
% tau = 10;
% 
% eegDatF= rmlinesmovingwinc(eegDat, movingwin, tau, params, 0,'',62.5,true);


% figure
% eegDatF= rmlinesmovingwinc(eegDat, movingwin, tau, params, 0,'y',62.5,true);
% title("RW"+pIdx+"_Walk"+wIdx+" Channel: "+chIdx+" Chunk:"+chunk)


% params.fpass = [62,63];
% [S1,f]=mtspectrumc(eegDat,params);

% params.Fs = Fs;
% movingwin = [5, 2.5];
% params.fpass = [62,63];
% params.tapers = [3 5];
% params.pad = 1;
% [S1,f]=mtspectrumc(eegDatF,params);
% [datafit,Amps]=fitlinesc(eegDat,params,0,'y',62.5);
% eegDatF = eegDat;
% eegDatF = eegDatF-2*datafit;
% eegDatF= rmlinesc(eegDat, params, 0,'y',62.5);
% figure;plot(datafit)